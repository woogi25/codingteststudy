import sys
sys.setrecursionlimit(10 ** 6)

def solution(grid):
    global cnt
    n = len(grid)
    m = len(grid[0])
    answer = []
    visited = [[[False] * 4 for _ in range(m)] for __ in range(n)]
    dx = [1,0,-1,0]
    dy = [0,1,0,-1]
    cnt = 0

    def f(x, y, dir):
        global cnt
        cnt += 1
        visited[x][y][dir] = True
        nx = x + dx[dir]
        ny = y + dy[dir]
        if nx < 0: nx = n - 1
        if ny < 0: ny = m - 1
        if nx >= n: nx = 0
        if ny >= m: ny = 0
        if grid[nx][ny] == 'S':
            next_dir = dir
        elif grid[nx][ny] == 'L':
            next_dir = (dir+1) % 4
        else:
            next_dir = (dir-1) % 4
        if visited[nx][ny][next_dir]:
            answer.append(cnt)
            return
        f(nx, ny, next_dir)
        return

    for i in range(n):
        for j in range(m):
            for k in range(4):
                if not visited[i][j][k]:
                    cnt = 0
                    f(i, j, k)

    return sorted(answer)